#
# Run pre-commit hooks. You can run them without installing
#  the hook with
#
# $ pre-commit run --all-files
#
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
        args: [--allow-multiple-documents]
    -   id: check-added-large-files
        args:
        - "--maxkb=200000"
# - repo: https://github.com/myint/autoflake
#   rev: v1.4
#   hooks:
#     - id: autoflake
#       args:
#         - --in-place
#         - --remove-unused-variables
#         - --remove-all-unused-imports
# -   repo: https://github.com/psf/black
#     rev: 22.6.0
#     hooks:
#     -   id: black
#- repo: https://github.com/pycqa/isort
#  rev: 5.10.1
#  hooks:
#    - id: isort
#      name: isort (python)
#      # Use black profile for isort to avoid conflicts
#      #   see https://github.com/PyCQA/isort/issues/1518
#      args: ["--profile", "black"]
#    - id: isort
#      name: isort (cython)
#      types: [cython]
#    - id: isort
#      name: isort (pyi)
#      types: [pyi]
#- repo: https://gitlab.com/pycqa/flake8
#  rev: 3.9.2
#  hooks:
#  - id: flake8
# - repo: https://github.com/PyCQA/bandit
#   rev: 1.7.4
#   hooks:
#     - id: bandit
#       name: bandit
#       args: ["-c", ".bandit.yaml"]
#       description: 'Bandit is a tool for finding common security issues in Python code'
#       entry: bandit
#       language: python
#       language_version: python3
#       types: [python]
# - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
#   rev: v1.3.0
#   hooks:
#     - id: python-safety-dependencies-check

#
# Semantic checks.
#
- repo: https://github.com/teamdigitale/json-semantic-playground
  #rev: c10c5879438de0d321d6591ec88ace95e042e9d2
  rev: 0b4ad4cc883a49878fdfd4539e694ae56b041e29
  hooks:
  #Check that the `latest/` version directory has the same content of the directory with the latest semantic versioning.
  # - id: validate-directory-versioning
  #   files: '^assets\/schemas\/.*\.yaml'
  - id: validate-csv
    files: >-
      ^assets\/controlled-vocabularies/.*\.csv
  - id: validate-oas-schema
    files: >-
      ^assets\/schemas\/.*.oas3.yaml
  - id: validate-turtle
    files: >-
      ^assets\/ontologies\/[^\/]+\/latest\/.*\.ttl
  - id: validate-turtle
    files: >-
      ^assets\/controlled-vocabularies\/.*\.ttl


- repo: local
  hooks:
    - id: check-repo-structure
      name: Check Repository Structure
      entry: python ./scripts/check_repo_structure.py
      args: ["assets/controlled-vocabularies/", "assets/ontologies/", "assets/schemas/"]
      language: system
      files: ^assets/.*
      pass_filenames: false
      types: [file]
- repo: local
  hooks:
    - id: check-filename-format
      name: Check Filename Format
      entry: python ./scripts/check_filename_format.py
      args: ["assets/controlled-vocabularies/", "assets/ontologies/", "assets/schemas/"]
      language: system
      files: ^assets/.*
      # exclude: ^assets\.shacl$
      pass_filenames: false
      types: [file]
